{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"l10c03_nlp_constructing_text_generation_model.ipynb의 사본","provenance":[{"file_id":"https://github.com/tensorflow/examples/blob/master/courses/udacity_intro_to_tensorflow_for_deep_learning/l10c03_nlp_constructing_text_generation_model.ipynb","timestamp":1636010602497}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"punL79CN7Ox6"},"source":["##### Copyright 2020 The TensorFlow Authors."]},{"cell_type":"code","metadata":{"cellView":"form","id":"_ckMIh7O7s6D"},"source":["#@title Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","# https://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ph5eir3Pf-3z"},"source":["# Constructing a Text Generation Model\n"]},{"cell_type":"markdown","metadata":{"id":"S5Uhzt6vVIB2"},"source":["<table class=\"tfo-notebook-buttons\" align=\"left\">\n","  <td>\n","    <a target=\"_blank\" href=\"https://colab.research.google.com/github/tensorflow/examples/blob/master/courses/udacity_intro_to_tensorflow_for_deep_learning/l10c03_nlp_constructing_text_generation_model.ipynb\"><img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />Run in Google Colab</a>\n","  </td>\n","  <td>\n","    <a target=\"_blank\" href=\"https://github.com/tensorflow/examples/blob/master/courses/udacity_intro_to_tensorflow_for_deep_learning/l10c03_nlp_constructing_text_generation_model.ipynb\"><img src=\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\" />View source on GitHub</a>\n","  </td>\n","</table>"]},{"cell_type":"markdown","metadata":{"id":"7GbGfr_oLCat"},"source":["Using most of the techniques you've already learned, it's now possible to generate new text by predicting the next word that follows a given seed word. To practice this method, we'll use the [Kaggle Song Lyrics Dataset](https://www.kaggle.com/mousehead/songlyrics)."]},{"cell_type":"markdown","metadata":{"id":"4aHK2CYygXom"},"source":["## Import TensorFlow and related functions"]},{"cell_type":"code","metadata":{"id":"2LmLTREBf5ng","executionInfo":{"status":"ok","timestamp":1636010635611,"user_tz":-540,"elapsed":2540,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}}},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","# Other imports for processing data\n","import string\n","import numpy as np\n","import pandas as pd"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GmLTO_dpgge9"},"source":["## Get the Dataset\n","\n","As noted above, we'll utilize the [Song Lyrics dataset](https://www.kaggle.com/mousehead/songlyrics) on Kaggle."]},{"cell_type":"code","metadata":{"id":"4Bf5FVHfganK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636010638389,"user_tz":-540,"elapsed":2784,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"ad2dbe4a-1ea4-469d-aa0c-63d85ff8f817"},"source":["!wget --no-check-certificate \\\n","    https://drive.google.com/uc?id=1LiJFZd41ofrWoBtW-pMYsfz1w8Ny0Bj8 \\\n","    -O /tmp/songdata.csv"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2021-11-04 07:23:54--  https://drive.google.com/uc?id=1LiJFZd41ofrWoBtW-pMYsfz1w8Ny0Bj8\n","Resolving drive.google.com (drive.google.com)... 108.177.111.139, 108.177.111.101, 108.177.111.113, ...\n","Connecting to drive.google.com (drive.google.com)|108.177.111.139|:443... connected.\n","HTTP request sent, awaiting response... 302 Moved Temporarily\n","Location: https://doc-04-ak-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/ajs00o4mgv5usmpmrd8fopda2ckbkrbl/1636010625000/11118900490791463723/*/1LiJFZd41ofrWoBtW-pMYsfz1w8Ny0Bj8 [following]\n","Warning: wildcards not supported in HTTP.\n","--2021-11-04 07:23:56--  https://doc-04-ak-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/ajs00o4mgv5usmpmrd8fopda2ckbkrbl/1636010625000/11118900490791463723/*/1LiJFZd41ofrWoBtW-pMYsfz1w8Ny0Bj8\n","Resolving doc-04-ak-docs.googleusercontent.com (doc-04-ak-docs.googleusercontent.com)... 142.250.152.132, 2607:f8b0:4001:c56::84\n","Connecting to doc-04-ak-docs.googleusercontent.com (doc-04-ak-docs.googleusercontent.com)|142.250.152.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 72436445 (69M) [text/csv]\n","Saving to: ‘/tmp/songdata.csv’\n","\n","/tmp/songdata.csv   100%[===================>]  69.08M   184MB/s    in 0.4s    \n","\n","2021-11-04 07:23:57 (184 MB/s) - ‘/tmp/songdata.csv’ saved [72436445/72436445]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"gu1BTzMIS1oy"},"source":["## **First 10 Songs**\n","\n","Let's first look at just 10 songs from the dataset, and see how things perform."]},{"cell_type":"markdown","metadata":{"id":"fmb9rGaAUDO-"},"source":["### Preprocessing\n","\n","Let's perform some basic preprocessing to get rid of punctuation and make everything lowercase. We'll then split the lyrics up by line and tokenize the lyrics."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"6DeUeLTj5Cd8","executionInfo":{"status":"ok","timestamp":1636011617983,"user_tz":-540,"elapsed":243,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"86559679-bf97-46c3-afd5-d8d684802367"},"source":["'[{}]'.format(string.punctuation)"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'[!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]'"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"2AVAvyF_Vuh5","executionInfo":{"status":"ok","timestamp":1636010641995,"user_tz":-540,"elapsed":254,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}}},"source":["def tokenize_corpus(corpus, num_words=-1):\n","  # Fit a Tokenizer on the corpus\n","  if num_words > -1:\n","    tokenizer = Tokenizer(num_words=num_words)\n","  else:\n","    tokenizer = Tokenizer()\n","  tokenizer.fit_on_texts(corpus)\n","  return tokenizer\n","\n","def create_lyrics_corpus(dataset, field):\n","  # Remove all other punctuation\n","  dataset[field] = dataset[field].str.replace('[{}]'.format(string.punctuation), '')\n","  # Make it lowercase\n","  dataset[field] = dataset[field].str.lower()\n","  # Make it one long string to split by line\n","  lyrics = dataset[field].str.cat()\n","  corpus = lyrics.split('\\n')\n","  # Remove any trailing whitespace\n","  for l in range(len(corpus)):\n","    corpus[l] = corpus[l].rstrip()\n","  # Remove any empty lines\n","  corpus = [l for l in corpus if l != '']\n","\n","  return corpus"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"Azdx3_1p3QwM","executionInfo":{"status":"ok","timestamp":1636011544341,"user_tz":-540,"elapsed":276,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"fad5244d-c6f9-4901-9f79-58c0d305821e"},"source":["dataset.text[3]"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'making somebody happy is a question of give and take  \\nyou can learn how to show it so come on give yourself a break  \\nevery smile and every little touch  \\ndont you know that they mean so much  \\nsweet sweet kisses so tender  \\nalways will return to sender  \\n  \\nlike a bang a boomaboomerang  \\ndumbedumdum bedumbedumdum  \\noh bang a boomaboomerang  \\nlove is a tune you humdehumhum  \\nso give it away i think youll learn  \\nyoull get love in return  \\nso bang a boomaboomerang is love  \\na boomaboomerang is love  \\n  \\nlove is always around and you can look for it anywhere  \\nwhen you feel that youve found it my advice is to take good care  \\nnever use it as a selfish tool  \\nnever ever be such a fool  \\nevery feeling youre showing  \\nis a boomerang youre throwing  \\n  \\nyes a bang a boomaboomerang  \\ndumbedumdum bedumbedumdum  \\noh bang a boomaboomerang  \\nlove is a tune you humdehumhum  \\nso give it away i think youll learn  \\nyoull get love in return  \\nso bang a boomaboomerang is love  \\n  \\nand if youre warm and tender  \\nill kiss you return to sender  \\nplease surrender  \\n  \\nbang a boomaboomerang  \\ndumbedumdum bedumbedumdum  \\noh bang a boomaboomerang is love  \\na boomaboomerang is love\\n\\n'"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-BUxyyuU5WGp","executionInfo":{"status":"ok","timestamp":1636011698932,"user_tz":-540,"elapsed":259,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"07bbb600-226d-4ff7-ed7d-83cf72de9e36"},"source":["corpus "],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['look at her face its a wonderful face',\n"," 'and it means something special to me',\n"," 'look at the way that she smiles when she sees me',\n"," 'how lucky can one fellow be',\n"," 'shes just my kind of girl she makes me feel fine',\n"," 'who could ever believe that she could be mine',\n"," 'shes just my kind of girl without her im blue',\n"," 'and if she ever leaves me what could i do what could i do',\n"," 'and when we go for a walk in the park',\n"," 'and she holds me and squeezes my hand',\n"," 'well go on walking for hours and talking',\n"," 'about all the things that we plan',\n"," 'shes just my kind of girl she makes me feel fine',\n"," 'who could ever believe that she could be mine',\n"," 'shes just my kind of girl without her im blue',\n"," 'and if she ever leaves me what could i do what could i do',\n"," 'take it easy with me please',\n"," 'touch me gently like a summer evening breeze',\n"," 'take your time make it slow',\n"," 'andante andante',\n"," 'just let the feeling grow',\n"," 'make your fingers soft and light',\n"," 'let your body be the velvet of the night',\n"," 'touch my soul you know how',\n"," 'andante andante',\n"," 'go slowly with me now',\n"," 'im your music',\n"," 'i am your music and i am your song',\n"," 'im your song',\n"," 'i am your music and i am your song',\n"," 'play me time and time again and make me strong',\n"," 'play me again cause youre making me strong',\n"," 'make me sing make me sound',\n"," 'you make me sing and you make me',\n"," 'andante andante',\n"," 'tread lightly on my ground',\n"," 'andante andante',\n"," 'oh please dont let me down',\n"," 'theres a shimmer in your eyes',\n"," 'like the feeling of a thousand butterflies',\n"," 'please dont talk go on play',\n"," 'andante andante',\n"," 'and let me float away',\n"," 'im your music',\n"," 'i am your music and i am your song',\n"," 'im your song',\n"," 'i am your music and i am your song',\n"," 'play me time and time again and make me strong',\n"," 'play me again cause youre making me strong',\n"," 'make me sing make me sound',\n"," 'you make me sing and you make me',\n"," 'andante andante',\n"," 'tread lightly on my ground',\n"," 'andante andante',\n"," 'oh please dont let me down',\n"," 'make me sing make me sound',\n"," 'you make me sing and you make me',\n"," 'andante andante',\n"," 'tread lightly on my ground',\n"," 'andante andante',\n"," 'oh please dont let me down',\n"," 'andante andante',\n"," 'oh please dont let me down',\n"," 'ill never know why i had to go',\n"," 'why i had to put up such a lousy rotten show',\n"," 'boy i was tough packing all my stuff',\n"," 'saying i dont need you anymore ive had enough',\n"," 'and now look at me standing here again cause i found out that',\n"," 'ma ma ma ma ma ma ma ma ma ma ma ma ma ma ma ma my life is here',\n"," 'gotta have you near',\n"," 'as good as new my love for you',\n"," 'and keeping it that way is my intention',\n"," 'as good as new and growing too',\n"," 'yes i think its taking on a new dimension',\n"," 'its as good as new my love for you',\n"," 'just like it used to be and even better',\n"," 'as good as new thank god its true',\n"," 'darling we were always meant to stay together',\n"," 'feel like a creep never felt so cheap',\n"," 'never had a notion that my love could be so deep',\n"," 'how could i make such a dumb mistake',\n"," 'now i know im not entitled to another break',\n"," 'but please baby i beg you to forgive cause i found out that',\n"," 'ma ma ma ma ma ma ma ma ma ma ma ma ma ma ma ma my life is here',\n"," 'gotta get you near',\n"," 'i thought that our love was at an end but here i am again',\n"," 'as good as new my love for you',\n"," 'and keeping it that way is my intention',\n"," 'as good as new and growing too',\n"," 'yes i think its taking on a new dimension',\n"," 'its as good as new my love for you',\n"," 'just like it used to be and even better',\n"," 'as good as new thank god its true',\n"," 'darling we were always meant to stay together',\n"," 'yes the love i have for you feels as good as new',\n"," 'darling we were always meant to stay together',\n"," 'making somebody happy is a question of give and take',\n"," 'you can learn how to show it so come on give yourself a break',\n"," 'every smile and every little touch',\n"," 'dont you know that they mean so much',\n"," 'sweet sweet kisses so tender',\n"," 'always will return to sender',\n"," 'like a bang a boomaboomerang',\n"," 'dumbedumdum bedumbedumdum',\n"," 'oh bang a boomaboomerang',\n"," 'love is a tune you humdehumhum',\n"," 'so give it away i think youll learn',\n"," 'youll get love in return',\n"," 'so bang a boomaboomerang is love',\n"," 'a boomaboomerang is love',\n"," 'love is always around and you can look for it anywhere',\n"," 'when you feel that youve found it my advice is to take good care',\n"," 'never use it as a selfish tool',\n"," 'never ever be such a fool',\n"," 'every feeling youre showing',\n"," 'is a boomerang youre throwing',\n"," 'yes a bang a boomaboomerang',\n"," 'dumbedumdum bedumbedumdum',\n"," 'oh bang a boomaboomerang',\n"," 'love is a tune you humdehumhum',\n"," 'so give it away i think youll learn',\n"," 'youll get love in return',\n"," 'so bang a boomaboomerang is love',\n"," 'and if youre warm and tender',\n"," 'ill kiss you return to sender',\n"," 'please surrender',\n"," 'bang a boomaboomerang',\n"," 'dumbedumdum bedumbedumdum',\n"," 'oh bang a boomaboomerang is love',\n"," 'a boomaboomerang is love',\n"," 'making somebody happy is a question of give and take',\n"," 'you can learn how to show it so come on give yourself a break',\n"," 'every smile and every little touch',\n"," 'dont you know that they mean so much',\n"," 'sweet sweet kisses so tender',\n"," 'always will return to sender',\n"," 'like a bang a boomaboomerang',\n"," 'dumbbedumbdumb bedumbbedumbdumb',\n"," 'oh bang a boomaboomerang',\n"," 'love is a tune you humdehumhum',\n"," 'by giving away i think youll learn',\n"," 'youll get love in return',\n"," 'so bang a boomaboomerang is love',\n"," 'a boomaboomerang is love',\n"," 'love is always around and you can look for it anywhere',\n"," 'when you feel that youve found it my advice is to take good care',\n"," 'never use it as a selfish tool',\n"," 'never ever be such a fool',\n"," 'every feeling youre showing',\n"," 'is a boomerang youre throwing',\n"," 'yes a bang a boomaboomerang',\n"," 'dumbbedumbdumb bedumbbedumbdumb',\n"," 'oh bang a boomaboomerang',\n"," 'love is a tune you humdehumhum',\n"," 'by giving away i think youll learn',\n"," 'youll get love in return',\n"," 'so bang a boomaboomerang is love',\n"," 'and if youre warm and tender',\n"," 'ill kiss you return to sender',\n"," 'please surrender',\n"," 'bang a boomaboomerang',\n"," 'dumbbedumbdumb bedumbbedumbdumb',\n"," 'oh bang a boomaboomerang is love',\n"," 'a boomaboomerang is love',\n"," 'well you hoot and you holler and you make me mad',\n"," 'and ive always been under your heel',\n"," 'holy christ what a lousy deal',\n"," 'now im sick and tired of your tedious ways',\n"," 'and i aint gonna take it no more',\n"," 'oh no no  walkin out that door',\n"," 'burning my bridges cutting my tie',\n"," 'once again i wanna look into the eye',\n"," 'being myself',\n"," 'counting my pride',\n"," 'no unright neighbours gonna take me for a ride',\n"," 'burning my bridges',\n"," 'moving at last',\n"," 'girl im leaving and im burying the past',\n"," 'gonna have peace now',\n"," 'you can be free',\n"," 'no one here will make a sucker out of me',\n"," 'down in the street theyre all singing and shouting',\n"," 'staying alive though the city is dead',\n"," 'hiding their shame behind hollow laughter',\n"," 'while you are crying alone on your bed',\n"," 'pity cassandra that no one believed you',\n"," 'but then again you were lost from the start',\n"," 'now we must suffer and sell our secrets',\n"," 'bargain playing smart aching in our hearts',\n"," 'sorry cassandra i misunderstood',\n"," 'now the last day is dawning',\n"," 'some of us wanted but none of us would',\n"," 'listen to words of warning',\n"," 'but on the darkest of nights',\n"," 'nobody knew how to fight',\n"," 'and we were caught in our sleep',\n"," 'sorry cassandra i didnt believe',\n"," 'you really had the power',\n"," 'i only saw it as dreams you would weave',\n"," 'until the final hour',\n"," 'so in the morning your ship will be sailing',\n"," 'now that your father and sister are gone',\n"," 'there is no reason for you to linger',\n"," 'youre grieving deeply but still moving on',\n"," 'you know the future is casting a shadow',\n"," 'no one else sees it but you know your fate',\n"," 'packing your bags being slow and thorough',\n"," 'knowing though youre late that ship is sure to wait',\n"," 'sorry cassandra i misunderstood',\n"," 'now the last day is dawning',\n"," 'some of us wanted but none of us would',\n"," 'listen to words of warning',\n"," 'but on the darkest of nights',\n"," 'nobody knew how to fight',\n"," 'and we were caught in our sleep',\n"," 'sorry cassandra i didnt believe',\n"," 'you really had the power',\n"," 'i only saw it as dreams you would weave',\n"," 'until the final hour',\n"," 'i watched the ship leaving harbor at sunrise',\n"," 'sails almost slack in the cool morning rain',\n"," 'she stood on deck just a tiny figure',\n"," 'rigid and restrained blue eyes filled with pain',\n"," 'sorry cassandra i misunderstood',\n"," 'now the last day is dawning',\n"," 'some of us wanted but none of us would',\n"," 'listen to words of warning',\n"," 'but on the darkest of nights',\n"," 'nobody knew how to fight',\n"," 'and we were caught in our sleep',\n"," 'sorry cassandra i didnt believe',\n"," 'you really had the power',\n"," 'i only saw it as dreams you would weave',\n"," 'until the final hour',\n"," 'im sorry cassandra',\n"," 'im sorry cassandra',\n"," 'chiquitita tell me whats wrong',\n"," 'youre enchained by your own sorrow',\n"," 'in your eyes there is no hope for tomorrow',\n"," 'how i hate to see you like this',\n"," 'there is no way you can deny it',\n"," 'i can see that youre oh so sad so quiet',\n"," 'chiquitita tell me the truth',\n"," 'im a shoulder you can cry on',\n"," 'your best friend im the one you must rely on',\n"," 'you were always sure of yourself',\n"," 'now i see youve broken a feather',\n"," 'i hope we can patch it up together',\n"," 'chiquitita you and i know',\n"," 'how the heartaches come and they go and the scars theyre leaving',\n"," 'youll be dancing once again and the pain will end',\n"," 'you will have no time for grieving',\n"," 'chiquitita you and i cry',\n"," 'but the sun is still in the sky and shining above you',\n"," 'let me hear you sing once more like you did before',\n"," 'sing a new song chiquitita',\n"," 'try once more like you did before',\n"," 'sing a new song chiquitita',\n"," 'so the walls came tumbling down',\n"," 'and your loves a blown out candle',\n"," 'all is gone and it seems too hard to handle',\n"," 'chiquitita tell me the truth',\n"," 'there is no way you can deny it',\n"," 'i see that youre oh so sad so quiet',\n"," 'chiquitita you and i know',\n"," 'how the heartaches come and they go and the scars theyre leaving',\n"," 'youll be dancing once again and the pain will end',\n"," 'you will have no time for grieving',\n"," 'chiquitita you and i cry',\n"," 'but the sun is still in the sky and shining above you',\n"," 'let me hear you sing once more like you did before',\n"," 'sing a new song chiquitita',\n"," 'try once more like you did before',\n"," 'sing a new song chiquitita',\n"," 'try once more like you did before',\n"," 'sing a new song chiquitita',\n"," 'i was out with the morning sun',\n"," 'couldnt sleep so i thought id take a walk',\n"," 'i was thinking of you and me',\n"," 'and i went to your house cause i had to talk',\n"," 'i could hardly believe my eyes',\n"," 'when i saw this guy closing your front door',\n"," 'had the feeling of emptiness like i never had before',\n"," 'and i closed my eyes will you leave me girl',\n"," 'then i realized its a crazy world',\n"," 'as he disapeared in his car',\n"," 'i was stunned and i didnt know what to do',\n"," 'everything i had ever dreamed',\n"," 'everything in my lifes part of you',\n"," 'and i just couldnt move my feet',\n"," 'so i stood on the pavement as you came out',\n"," 'you acted as you didnt know what it was all about',\n"," 'and i closed my eyes will you leave me girl',\n"," 'then i realized its a crazy world',\n"," 'baby how could you do it',\n"," 'you just told me lies',\n"," 'and you meet behind my back',\n"," 'with other guys',\n"," 'baby how could you tell me',\n"," 'there was only me',\n"," 'i was stupid to believe you',\n"," 'i was blind but now i see',\n"," 'then you smiled and you took my hand',\n"," 'there is something you said that you may not know',\n"," 'theres a couple of men in my life',\n"," 'and one of them is my brother joe',\n"," 'hes been gone for a long long time',\n"," 'but hes back and i think hes gonna stay',\n"," 'youll be seeing a lot of him hes so nice in every way',\n"," 'then i closed my eyes never leave me girl',\n"," 'then i realized its a crazy world',\n"," 'so i closed my eyes never leave me girl',\n"," 'then i realized its a crazy world',\n"," 'so i closed my eyes never leave me girl',\n"," 'then i realized its a crazy world',\n"," 'im waitin for you baby',\n"," 'im sitting all alone',\n"," 'i feel so cold without you',\n"," 'it chills me to the bone',\n"," 'i never thought youd leave me',\n"," 'but now i know its true',\n"," 'oh lord im blue',\n"," 'im cryin over you',\n"," 'im waitin for you baby',\n"," 'im sittin all alone',\n"," 'i feel so cold without you',\n"," 'it chills me to the bone',\n"," 'i never thought youd leave me',\n"," 'but now i know its true',\n"," 'oh lord im blue',\n"," 'im cryin over you',\n"," 'cryin over you',\n"," 'im cryin over you',\n"," 'cryin over',\n"," 'little memories of things we used to do',\n"," 'oh lord im blue',\n"," 'im cryin over you',\n"," 'oh lord im blue',\n"," 'im cryin over you',\n"," 'oh lord im blue',\n"," 'im cryin over you']"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"apcEXp7WhVBs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636010644927,"user_tz":-540,"elapsed":1031,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"4094b4e8-7767-4ec9-dccb-e15ecfc924d1"},"source":["# Read the dataset from csv - just first 10 songs for now\n","dataset = pd.read_csv('/tmp/songdata.csv', dtype=str)[:10]\n","# Create the corpus using the 'text' column containing lyrics\n","corpus = create_lyrics_corpus(dataset, 'text')\n","# Tokenize the corpus\n","tokenizer = tokenize_corpus(corpus)\n","\n","total_words = len(tokenizer.word_index) + 1\n","\n","print(tokenizer.word_index)\n","print(total_words)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["{'you': 1, 'i': 2, 'and': 3, 'a': 4, 'me': 5, 'the': 6, 'is': 7, 'my': 8, 'to': 9, 'ma': 10, 'it': 11, 'of': 12, 'im': 13, 'your': 14, 'love': 15, 'so': 16, 'as': 17, 'that': 18, 'in': 19, 'andante': 20, 'boomaboomerang': 21, 'make': 22, 'on': 23, 'oh': 24, 'for': 25, 'but': 26, 'new': 27, 'bang': 28, 'its': 29, 'be': 30, 'like': 31, 'know': 32, 'now': 33, 'how': 34, 'could': 35, 'youre': 36, 'sing': 37, 'never': 38, 'no': 39, 'chiquitita': 40, 'can': 41, 'we': 42, 'song': 43, 'had': 44, 'good': 45, 'youll': 46, 'she': 47, 'just': 48, 'girl': 49, 'again': 50, 'will': 51, 'take': 52, 'please': 53, 'let': 54, 'am': 55, 'eyes': 56, 'was': 57, 'always': 58, 'cassandra': 59, 'blue': 60, 'time': 61, 'dont': 62, 'were': 63, 'return': 64, 'once': 65, 'then': 66, 'sorry': 67, 'cryin': 68, 'over': 69, 'feel': 70, 'ever': 71, 'believe': 72, 'what': 73, 'do': 74, 'go': 75, 'all': 76, 'out': 77, 'think': 78, 'every': 79, 'leave': 80, 'look': 81, 'at': 82, 'way': 83, 'one': 84, 'music': 85, 'down': 86, 'our': 87, 'give': 88, 'learn': 89, 'more': 90, 'us': 91, 'would': 92, 'there': 93, 'before': 94, 'when': 95, 'with': 96, 'feeling': 97, 'play': 98, 'cause': 99, 'away': 100, 'here': 101, 'have': 102, 'yes': 103, 'baby': 104, 'get': 105, 'didnt': 106, 'see': 107, 'did': 108, 'closed': 109, 'realized': 110, 'crazy': 111, 'world': 112, 'lord': 113, 'shes': 114, 'kind': 115, 'without': 116, 'if': 117, 'touch': 118, 'strong': 119, 'making': 120, 'such': 121, 'found': 122, 'true': 123, 'stay': 124, 'together': 125, 'thought': 126, 'come': 127, 'they': 128, 'sweet': 129, 'tender': 130, 'sender': 131, 'tune': 132, 'humdehumhum': 133, 'gonna': 134, 'last': 135, 'leaving': 136, 'sleep': 137, 'only': 138, 'saw': 139, 'tell': 140, 'hes': 141, 'her': 142, 'sound': 143, 'tread': 144, 'lightly': 145, 'ground': 146, 'ill': 147, 'show': 148, 'life': 149, 'too': 150, 'used': 151, 'darling': 152, 'meant': 153, 'break': 154, 'end': 155, 'yourself': 156, 'little': 157, 'dumbedumdum': 158, 'bedumbedumdum': 159, 'youve': 160, 'dumbbedumbdumb': 161, 'bedumbbedumbdumb': 162, 'by': 163, 'theyre': 164, 'alone': 165, 'misunderstood': 166, 'day': 167, 'dawning': 168, 'some': 169, 'wanted': 170, 'none': 171, 'listen': 172, 'words': 173, 'warning': 174, 'darkest': 175, 'nights': 176, 'nobody': 177, 'knew': 178, 'fight': 179, 'caught': 180, 'really': 181, 'power': 182, 'dreams': 183, 'weave': 184, 'until': 185, 'final': 186, 'hour': 187, 'morning': 188, 'ship': 189, 'gone': 190, 'grieving': 191, 'still': 192, 'pain': 193, 'cry': 194, 'sun': 195, 'try': 196, 'face': 197, 'something': 198, 'sees': 199, 'makes': 200, 'fine': 201, 'who': 202, 'mine': 203, 'leaves': 204, 'walk': 205, 'hand': 206, 'well': 207, 'about': 208, 'things': 209, 'slow': 210, 'theres': 211, 'talk': 212, 'why': 213, 'up': 214, 'lousy': 215, 'packing': 216, 'ive': 217, 'gotta': 218, 'near': 219, 'keeping': 220, 'intention': 221, 'growing': 222, 'taking': 223, 'dimension': 224, 'even': 225, 'better': 226, 'thank': 227, 'god': 228, 'not': 229, 'somebody': 230, 'happy': 231, 'question': 232, 'smile': 233, 'mean': 234, 'much': 235, 'kisses': 236, 'around': 237, 'anywhere': 238, 'advice': 239, 'care': 240, 'use': 241, 'selfish': 242, 'tool': 243, 'fool': 244, 'showing': 245, 'boomerang': 246, 'throwing': 247, 'warm': 248, 'kiss': 249, 'surrender': 250, 'giving': 251, 'been': 252, 'door': 253, 'burning': 254, 'bridges': 255, 'being': 256, 'moving': 257, 'though': 258, 'behind': 259, 'are': 260, 'must': 261, 'sure': 262, 'stood': 263, 'hope': 264, 'this': 265, 'deny': 266, 'sad': 267, 'quiet': 268, 'truth': 269, 'heartaches': 270, 'scars': 271, 'dancing': 272, 'sky': 273, 'shining': 274, 'above': 275, 'hear': 276, 'came': 277, 'couldnt': 278, 'everything': 279, 'back': 280, 'long': 281, 'waitin': 282, 'cold': 283, 'chills': 284, 'bone': 285, 'youd': 286, 'wonderful': 287, 'means': 288, 'special': 289, 'smiles': 290, 'lucky': 291, 'fellow': 292, 'park': 293, 'holds': 294, 'squeezes': 295, 'walking': 296, 'hours': 297, 'talking': 298, 'plan': 299, 'easy': 300, 'gently': 301, 'summer': 302, 'evening': 303, 'breeze': 304, 'grow': 305, 'fingers': 306, 'soft': 307, 'light': 308, 'body': 309, 'velvet': 310, 'night': 311, 'soul': 312, 'slowly': 313, 'shimmer': 314, 'thousand': 315, 'butterflies': 316, 'float': 317, 'put': 318, 'rotten': 319, 'boy': 320, 'tough': 321, 'stuff': 322, 'saying': 323, 'need': 324, 'anymore': 325, 'enough': 326, 'standing': 327, 'creep': 328, 'felt': 329, 'cheap': 330, 'notion': 331, 'deep': 332, 'dumb': 333, 'mistake': 334, 'entitled': 335, 'another': 336, 'beg': 337, 'forgive': 338, 'an': 339, 'feels': 340, 'hoot': 341, 'holler': 342, 'mad': 343, 'under': 344, 'heel': 345, 'holy': 346, 'christ': 347, 'deal': 348, 'sick': 349, 'tired': 350, 'tedious': 351, 'ways': 352, 'aint': 353, 'walkin': 354, 'cutting': 355, 'tie': 356, 'wanna': 357, 'into': 358, 'eye': 359, 'myself': 360, 'counting': 361, 'pride': 362, 'unright': 363, 'neighbours': 364, 'ride': 365, 'burying': 366, 'past': 367, 'peace': 368, 'free': 369, 'sucker': 370, 'street': 371, 'singing': 372, 'shouting': 373, 'staying': 374, 'alive': 375, 'city': 376, 'dead': 377, 'hiding': 378, 'their': 379, 'shame': 380, 'hollow': 381, 'laughter': 382, 'while': 383, 'crying': 384, 'bed': 385, 'pity': 386, 'believed': 387, 'lost': 388, 'from': 389, 'start': 390, 'suffer': 391, 'sell': 392, 'secrets': 393, 'bargain': 394, 'playing': 395, 'smart': 396, 'aching': 397, 'hearts': 398, 'sailing': 399, 'father': 400, 'sister': 401, 'reason': 402, 'linger': 403, 'deeply': 404, 'future': 405, 'casting': 406, 'shadow': 407, 'else': 408, 'fate': 409, 'bags': 410, 'thorough': 411, 'knowing': 412, 'late': 413, 'wait': 414, 'watched': 415, 'harbor': 416, 'sunrise': 417, 'sails': 418, 'almost': 419, 'slack': 420, 'cool': 421, 'rain': 422, 'deck': 423, 'tiny': 424, 'figure': 425, 'rigid': 426, 'restrained': 427, 'filled': 428, 'whats': 429, 'wrong': 430, 'enchained': 431, 'own': 432, 'sorrow': 433, 'tomorrow': 434, 'hate': 435, 'shoulder': 436, 'best': 437, 'friend': 438, 'rely': 439, 'broken': 440, 'feather': 441, 'patch': 442, 'walls': 443, 'tumbling': 444, 'loves': 445, 'blown': 446, 'candle': 447, 'seems': 448, 'hard': 449, 'handle': 450, 'id': 451, 'thinking': 452, 'went': 453, 'house': 454, 'hardly': 455, 'guy': 456, 'closing': 457, 'front': 458, 'emptiness': 459, 'he': 460, 'disapeared': 461, 'his': 462, 'car': 463, 'stunned': 464, 'dreamed': 465, 'lifes': 466, 'part': 467, 'move': 468, 'feet': 469, 'pavement': 470, 'acted': 471, 'told': 472, 'lies': 473, 'meet': 474, 'other': 475, 'guys': 476, 'stupid': 477, 'blind': 478, 'smiled': 479, 'took': 480, 'said': 481, 'may': 482, 'couple': 483, 'men': 484, 'them': 485, 'brother': 486, 'joe': 487, 'seeing': 488, 'lot': 489, 'him': 490, 'nice': 491, 'sitting': 492, 'sittin': 493, 'memories': 494}\n","495\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  if sys.path[0] == '':\n"]}]},{"cell_type":"markdown","metadata":{"id":"v9x68iN_X6FK"},"source":["### Create Sequences and Labels\n","\n","After preprocessing, we next need to create sequences and labels. Creating the sequences themselves is similar to before with `texts_to_sequences`, but also including the use of [N-Grams](https://towardsdatascience.com/introduction-to-language-models-n-gram-e323081503d9); creating the labels will now utilize those sequences as well as utilize one-hot encoding over all potential output words."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMwbcOle6g8K","executionInfo":{"status":"ok","timestamp":1636012052098,"user_tz":-540,"elapsed":253,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"11c7495b-0192-4f0f-884b-53f065cf82d2"},"source":["tokenizer.texts_to_sequences(['never use it as a selfish tool'])"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[38, 241, 11, 17, 4, 242, 243]]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"QmlTsUqfikVO","executionInfo":{"status":"ok","timestamp":1636011078259,"user_tz":-540,"elapsed":259,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}}},"source":["sequences = []\n","for line in corpus:\n","\ttoken_list = tokenizer.texts_to_sequences([line])[0]\n","\tfor i in range(1, len(token_list)):\n","\t\tn_gram_sequence = token_list[:i+1]\n","\t\tsequences.append(n_gram_sequence)\n","\n","# Pad sequences for equal input length \n","max_sequence_len = max([len(seq) for seq in sequences])\n","sequences = np.array(pad_sequences(sequences, maxlen=max_sequence_len, padding='pre'))\n","\n","# Split sequences between the \"input\" sequence and \"output\" predicted word\n","input_sequences, labels = sequences[:,:-1], sequences[:,-1]\n","# One-hot encode the labels\n","one_hot_labels = tf.keras.utils.to_categorical(labels, num_classes=total_words)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gnNCE6X17mHo","executionInfo":{"status":"ok","timestamp":1636012490579,"user_tz":-540,"elapsed":261,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"2445d183-7617-426e-9eb7-c658a550aa7b"},"source":["print(tokenizer.word_index['wonderful'])"],"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["287\n"]}]},{"cell_type":"code","metadata":{"id":"Zsmu3aEId49i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636012210043,"user_tz":-540,"elapsed":232,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"eb7ea153-0554-4dc7-cf35-b89d1db1a926"},"source":["# Check out how some of our data is being stored\n","# The Tokenizer has just a single index per word\n","print(tokenizer.word_index['know'])\n","print(tokenizer.word_index['feeling'])\n","# Input sequences will have multiple indexes\n","print(input_sequences[5])\n","print(input_sequences[6])\n","# And the one hot labels will be as long as the full spread of tokenized words\n","print(one_hot_labels[5])\n","print(one_hot_labels[6])\n","# look at her face its a  >  5\n","#look at her face its a wonderful >  6"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["32\n","97\n","[  0   0   0   0   0   0   0   0   0   0   0   0   0  81  82 142 197  29\n","   4]\n","[  0   0   0   0   0   0   0   0   0   0   0   0  81  82 142 197  29   4\n"," 287]\n","[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n","[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"-1TAJMlmfO8r"},"source":["### Train a Text Generation Model\n","\n","Building an RNN to train our text generation model will be very similar to the sentiment models you've built previously. The only real change necessary is to make sure to use Categorical instead of Binary Cross Entropy as the loss function - we could use Binary before since the sentiment was only 0 or 1, but now there are hundreds of categories.\n","\n","From there, we should also consider using *more* epochs than before, as text generation can take a little longer to converge than sentiment analysis, *and* we aren't working with all that much data yet. I'll set it at 200 epochs here since we're only use part of the dataset, and training will tail off quite a bit over that many epochs."]},{"cell_type":"code","metadata":{"id":"G1YXuxIqfygN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636011295445,"user_tz":-540,"elapsed":212379,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"f31b5623-4431-42ca-a6b1-ba28a2fbdc12"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Embedding, LSTM, Dense, Bidirectional\n","\n","model = Sequential()\n","model.add(Embedding(total_words, 64, input_length=max_sequence_len-1))\n","model.add(Bidirectional(LSTM(20)))\n","model.add(Dense(total_words, activation='softmax'))\n","model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n","history = model.fit(input_sequences, one_hot_labels, epochs=200, verbose=1)"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","62/62 [==============================] - 9s 13ms/step - loss: 6.0103 - accuracy: 0.0303\n","Epoch 2/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.4408 - accuracy: 0.0348\n","Epoch 3/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.3708 - accuracy: 0.0404\n","Epoch 4/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.3217 - accuracy: 0.0409\n","Epoch 5/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.2586 - accuracy: 0.0429\n","Epoch 6/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.1942 - accuracy: 0.0424\n","Epoch 7/200\n","62/62 [==============================] - 1s 12ms/step - loss: 5.1366 - accuracy: 0.0414\n","Epoch 8/200\n","62/62 [==============================] - 1s 13ms/step - loss: 5.0797 - accuracy: 0.0439\n","Epoch 9/200\n","62/62 [==============================] - 1s 13ms/step - loss: 5.0100 - accuracy: 0.0414\n","Epoch 10/200\n","62/62 [==============================] - 1s 13ms/step - loss: 4.9339 - accuracy: 0.0454\n","Epoch 11/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.8508 - accuracy: 0.0535\n","Epoch 12/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.7669 - accuracy: 0.0742\n","Epoch 13/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.6844 - accuracy: 0.0636\n","Epoch 14/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.6154 - accuracy: 0.0732\n","Epoch 15/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.5228 - accuracy: 0.0878\n","Epoch 16/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.4440 - accuracy: 0.0903\n","Epoch 17/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.3701 - accuracy: 0.1085\n","Epoch 18/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.2851 - accuracy: 0.1145\n","Epoch 19/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.2034 - accuracy: 0.1393\n","Epoch 20/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.1214 - accuracy: 0.1443\n","Epoch 21/200\n","62/62 [==============================] - 1s 12ms/step - loss: 4.0419 - accuracy: 0.1690\n","Epoch 22/200\n","62/62 [==============================] - 1s 13ms/step - loss: 3.9662 - accuracy: 0.1761\n","Epoch 23/200\n","62/62 [==============================] - 1s 13ms/step - loss: 3.9053 - accuracy: 0.1978\n","Epoch 24/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.8244 - accuracy: 0.2074\n","Epoch 25/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.7510 - accuracy: 0.2230\n","Epoch 26/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.6733 - accuracy: 0.2457\n","Epoch 27/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.6255 - accuracy: 0.2513\n","Epoch 28/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.5402 - accuracy: 0.2735\n","Epoch 29/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.4766 - accuracy: 0.2851\n","Epoch 30/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.4045 - accuracy: 0.2957\n","Epoch 31/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.3487 - accuracy: 0.3163\n","Epoch 32/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.2772 - accuracy: 0.3199\n","Epoch 33/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.2131 - accuracy: 0.3391\n","Epoch 34/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.1507 - accuracy: 0.3476\n","Epoch 35/200\n","62/62 [==============================] - 1s 13ms/step - loss: 3.0955 - accuracy: 0.3638\n","Epoch 36/200\n","62/62 [==============================] - 1s 12ms/step - loss: 3.0365 - accuracy: 0.3759\n","Epoch 37/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.9882 - accuracy: 0.3920\n","Epoch 38/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.9073 - accuracy: 0.4092\n","Epoch 39/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.8586 - accuracy: 0.4299\n","Epoch 40/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.8025 - accuracy: 0.4405\n","Epoch 41/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.7443 - accuracy: 0.4632\n","Epoch 42/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.6782 - accuracy: 0.4672\n","Epoch 43/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.6361 - accuracy: 0.4738\n","Epoch 44/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.5737 - accuracy: 0.4894\n","Epoch 45/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.5290 - accuracy: 0.4950\n","Epoch 46/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.4859 - accuracy: 0.4970\n","Epoch 47/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.4406 - accuracy: 0.5066\n","Epoch 48/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.4298 - accuracy: 0.5035\n","Epoch 49/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.3876 - accuracy: 0.5172\n","Epoch 50/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.3226 - accuracy: 0.5247\n","Epoch 51/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.2656 - accuracy: 0.5383\n","Epoch 52/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.2179 - accuracy: 0.5439\n","Epoch 53/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.1822 - accuracy: 0.5489\n","Epoch 54/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.1288 - accuracy: 0.5610\n","Epoch 55/200\n","62/62 [==============================] - 1s 12ms/step - loss: 2.0931 - accuracy: 0.5616\n","Epoch 56/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.0561 - accuracy: 0.5812\n","Epoch 57/200\n","62/62 [==============================] - 1s 13ms/step - loss: 2.0223 - accuracy: 0.5747\n","Epoch 58/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.9862 - accuracy: 0.5863\n","Epoch 59/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.9459 - accuracy: 0.5989\n","Epoch 60/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.9040 - accuracy: 0.6095\n","Epoch 61/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.8845 - accuracy: 0.6085\n","Epoch 62/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.8481 - accuracy: 0.6171\n","Epoch 63/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.8128 - accuracy: 0.6211\n","Epoch 64/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.7780 - accuracy: 0.6276\n","Epoch 65/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.7482 - accuracy: 0.6458\n","Epoch 66/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.7130 - accuracy: 0.6514\n","Epoch 67/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.6950 - accuracy: 0.6493\n","Epoch 68/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.6661 - accuracy: 0.6615\n","Epoch 69/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.6249 - accuracy: 0.6680\n","Epoch 70/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.6058 - accuracy: 0.6756\n","Epoch 71/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.6037 - accuracy: 0.6675\n","Epoch 72/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.5507 - accuracy: 0.6872\n","Epoch 73/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.5375 - accuracy: 0.7013\n","Epoch 74/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.5139 - accuracy: 0.6968\n","Epoch 75/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.4855 - accuracy: 0.7018\n","Epoch 76/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.4544 - accuracy: 0.7094\n","Epoch 77/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.4347 - accuracy: 0.7170\n","Epoch 78/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.4072 - accuracy: 0.7245\n","Epoch 79/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.3852 - accuracy: 0.7265\n","Epoch 80/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.3644 - accuracy: 0.7301\n","Epoch 81/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.3366 - accuracy: 0.7346\n","Epoch 82/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.3280 - accuracy: 0.7366\n","Epoch 83/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.3164 - accuracy: 0.7361\n","Epoch 84/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.2926 - accuracy: 0.7447\n","Epoch 85/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.2624 - accuracy: 0.7533\n","Epoch 86/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.2450 - accuracy: 0.7482\n","Epoch 87/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.2154 - accuracy: 0.7654\n","Epoch 88/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.2091 - accuracy: 0.7583\n","Epoch 89/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.2239 - accuracy: 0.7518\n","Epoch 90/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.2086 - accuracy: 0.7558\n","Epoch 91/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.1859 - accuracy: 0.7598\n","Epoch 92/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.1646 - accuracy: 0.7624\n","Epoch 93/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.1355 - accuracy: 0.7719\n","Epoch 94/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.1687 - accuracy: 0.7523\n","Epoch 95/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.1140 - accuracy: 0.7785\n","Epoch 96/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.0836 - accuracy: 0.7735\n","Epoch 97/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.0717 - accuracy: 0.7800\n","Epoch 98/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.1016 - accuracy: 0.7664\n","Epoch 99/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.0621 - accuracy: 0.7790\n","Epoch 100/200\n","62/62 [==============================] - 1s 13ms/step - loss: 1.0426 - accuracy: 0.7770\n","Epoch 101/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.0340 - accuracy: 0.7841\n","Epoch 102/200\n","62/62 [==============================] - 1s 12ms/step - loss: 1.0091 - accuracy: 0.7911\n","Epoch 103/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9994 - accuracy: 0.7881\n","Epoch 104/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9795 - accuracy: 0.7916\n","Epoch 105/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9587 - accuracy: 0.7977\n","Epoch 106/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9419 - accuracy: 0.8002\n","Epoch 107/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9377 - accuracy: 0.8032\n","Epoch 108/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9196 - accuracy: 0.8063\n","Epoch 109/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9090 - accuracy: 0.8098\n","Epoch 110/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.8967 - accuracy: 0.8098\n","Epoch 111/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.9409 - accuracy: 0.7876\n","Epoch 112/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.8998 - accuracy: 0.8052\n","Epoch 113/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.8812 - accuracy: 0.8052\n","Epoch 114/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.8637 - accuracy: 0.8184\n","Epoch 115/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.8518 - accuracy: 0.8123\n","Epoch 116/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.8394 - accuracy: 0.8169\n","Epoch 117/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.8269 - accuracy: 0.8194\n","Epoch 118/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.8162 - accuracy: 0.8254\n","Epoch 119/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.8017 - accuracy: 0.8274\n","Epoch 120/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7917 - accuracy: 0.8254\n","Epoch 121/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7932 - accuracy: 0.8239\n","Epoch 122/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7997 - accuracy: 0.8209\n","Epoch 123/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.7804 - accuracy: 0.8264\n","Epoch 124/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7754 - accuracy: 0.8264\n","Epoch 125/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.7504 - accuracy: 0.8355\n","Epoch 126/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.7392 - accuracy: 0.8360\n","Epoch 127/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.7307 - accuracy: 0.8375\n","Epoch 128/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7176 - accuracy: 0.8406\n","Epoch 129/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7108 - accuracy: 0.8441\n","Epoch 130/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7045 - accuracy: 0.8406\n","Epoch 131/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.7024 - accuracy: 0.8416\n","Epoch 132/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6909 - accuracy: 0.8496\n","Epoch 133/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6840 - accuracy: 0.8421\n","Epoch 134/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6807 - accuracy: 0.8491\n","Epoch 135/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6798 - accuracy: 0.8512\n","Epoch 136/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6630 - accuracy: 0.8542\n","Epoch 137/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6534 - accuracy: 0.8522\n","Epoch 138/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6440 - accuracy: 0.8547\n","Epoch 139/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6351 - accuracy: 0.8562\n","Epoch 140/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6295 - accuracy: 0.8618\n","Epoch 141/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6207 - accuracy: 0.8587\n","Epoch 142/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6261 - accuracy: 0.8613\n","Epoch 143/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.6245 - accuracy: 0.8587\n","Epoch 144/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6078 - accuracy: 0.8648\n","Epoch 145/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6027 - accuracy: 0.8653\n","Epoch 146/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6072 - accuracy: 0.8557\n","Epoch 147/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6159 - accuracy: 0.8592\n","Epoch 148/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5926 - accuracy: 0.8653\n","Epoch 149/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5803 - accuracy: 0.8673\n","Epoch 150/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5716 - accuracy: 0.8663\n","Epoch 151/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5636 - accuracy: 0.8718\n","Epoch 152/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5566 - accuracy: 0.8698\n","Epoch 153/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5650 - accuracy: 0.8688\n","Epoch 154/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5745 - accuracy: 0.8638\n","Epoch 155/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5697 - accuracy: 0.8653\n","Epoch 156/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5609 - accuracy: 0.8708\n","Epoch 157/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.5649 - accuracy: 0.8683\n","Epoch 158/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5487 - accuracy: 0.8688\n","Epoch 159/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5376 - accuracy: 0.8734\n","Epoch 160/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5301 - accuracy: 0.8774\n","Epoch 161/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5161 - accuracy: 0.8779\n","Epoch 162/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5149 - accuracy: 0.8799\n","Epoch 163/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5058 - accuracy: 0.8784\n","Epoch 164/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4963 - accuracy: 0.8845\n","Epoch 165/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4916 - accuracy: 0.8784\n","Epoch 166/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4937 - accuracy: 0.8779\n","Epoch 167/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4964 - accuracy: 0.8809\n","Epoch 168/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4847 - accuracy: 0.8824\n","Epoch 169/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.4764 - accuracy: 0.8850\n","Epoch 170/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4855 - accuracy: 0.8809\n","Epoch 171/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5515 - accuracy: 0.8628\n","Epoch 172/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5039 - accuracy: 0.8724\n","Epoch 173/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5094 - accuracy: 0.8744\n","Epoch 174/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4831 - accuracy: 0.8789\n","Epoch 175/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4640 - accuracy: 0.8890\n","Epoch 176/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4547 - accuracy: 0.8860\n","Epoch 177/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4454 - accuracy: 0.8900\n","Epoch 178/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4405 - accuracy: 0.8910\n","Epoch 179/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4371 - accuracy: 0.8885\n","Epoch 180/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4331 - accuracy: 0.8925\n","Epoch 181/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4279 - accuracy: 0.8910\n","Epoch 182/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4234 - accuracy: 0.8885\n","Epoch 183/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4191 - accuracy: 0.8915\n","Epoch 184/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4155 - accuracy: 0.8925\n","Epoch 185/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4153 - accuracy: 0.8925\n","Epoch 186/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4112 - accuracy: 0.8920\n","Epoch 187/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4098 - accuracy: 0.8925\n","Epoch 188/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4254 - accuracy: 0.8895\n","Epoch 189/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4303 - accuracy: 0.8885\n","Epoch 190/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4561 - accuracy: 0.8819\n","Epoch 191/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4669 - accuracy: 0.8754\n","Epoch 192/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4291 - accuracy: 0.8865\n","Epoch 193/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4165 - accuracy: 0.8845\n","Epoch 194/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4009 - accuracy: 0.8935\n","Epoch 195/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3922 - accuracy: 0.8925\n","Epoch 196/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3877 - accuracy: 0.8925\n","Epoch 197/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3829 - accuracy: 0.8915\n","Epoch 198/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3776 - accuracy: 0.8996\n","Epoch 199/200\n","62/62 [==============================] - 1s 12ms/step - loss: 0.3750 - accuracy: 0.8971\n","Epoch 200/200\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3707 - accuracy: 0.8971\n"]}]},{"cell_type":"markdown","metadata":{"id":"AXVFpoREhV6Y"},"source":["### View the Training Graph"]},{"cell_type":"code","metadata":{"id":"aeSNfS7uhch0","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1636011295449,"user_tz":-540,"elapsed":12,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"2158f62d-4585-42a5-ab7c-fb9c062ab0e9"},"source":["import matplotlib.pyplot as plt\n","\n","def plot_graphs(history, string):\n","  plt.plot(history.history[string])\n","  plt.xlabel(\"Epochs\")\n","  plt.ylabel(string)\n","  plt.show()\n","\n","plot_graphs(history, 'accuracy')"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"1rAgRpxYhjpB"},"source":["### Generate new lyrics!\n","\n","It's finally time to generate some new lyrics from the trained model, and see what we get. To do so, we'll provide some \"seed text\", or an input sequence for the model to start with. We'll also decide just how long of an output sequence we want - this could essentially be infinite, as the input plus the previous output will be continuously fed in for a new output word (at least up to our max sequence length)."]},{"cell_type":"code","metadata":{"id":"DC7zfcgviDTp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636011300998,"user_tz":-540,"elapsed":5556,"user":{"displayName":"정찬휘","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06853102929161356417"}},"outputId":"6f85c320-1aba-4b14-c24a-551a8399bde0"},"source":["seed_text = \"im feeling chills\"\n","next_words = 100\n","  \n","for _ in range(next_words):\n","\ttoken_list = tokenizer.texts_to_sequences([seed_text])[0]\n","\ttoken_list = pad_sequences([token_list], maxlen=max_sequence_len-1, padding='pre')\n","\tpredicted = np.argmax(model.predict(token_list), axis=-1)\n","\toutput_word = \"\"\n","\tfor word, index in tokenizer.word_index.items():\n","\t\tif index == predicted:\n","\t\t\toutput_word = word\n","\t\t\tbreak\n","\tseed_text += \" \" + output_word\n","print(seed_text)"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["im feeling chills it used to your leave me girl on alive alive alive christ go girl no aching as good as new good care as you would weave deny blue making making me sorrow sorrow world world know under under gone once hear you once strong time once hear you did before and light and thorough and thorough strong thorough last is dawning take good as new peace deny good care new was eye emptiness tune truth truth making feeling eye beg think power sweet night wait warm would world world best hour surrender surrender best hour surrender surrender best hour surrender\n"]}]}]}